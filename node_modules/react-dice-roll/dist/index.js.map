{"version":3,"file":"index.js","sources":["../src/_utils.ts","../src/index.tsx"],"sourcesContent":["import { ReactChild } from 'react';\nimport { TValueClassMap, TFaceTransformMap, TDefaultFaceGrid } from './_types';\n\nexport const valueClassMap: TValueClassMap = {\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n    6: 'six',\n};\n\nexport const faceTransformMap: TFaceTransformMap = {\n    1: (translate: number) => ({ transform: `rotateX(-90deg) translate3d(0, 0, ${translate}px)` }),\n    2: (translate: number) => ({ transform: `translate3d(0, 0, ${translate}px)` }),\n    3: (translate: number) => ({ transform: `rotateY(180deg) translate3d(0, 0, ${translate}px)` }),\n    4: (translate: number) => ({ left: '50%', marginLeft: `-${translate}px`, transform: `rotateY(-90deg) translate3d(0, 0, ${translate}px)` }),\n    5: (translate: number) => ({ left: '50%', marginLeft: `-${translate}px`, transform: `rotateY(90deg) translate3d(0, 0, ${translate}px)` }),\n    6: (translate: number) => ({ transform: `rotateX(90deg) translate3d(0, 0, ${translate}px)` }),\n};\n\nexport const defaultFaceGrid: TDefaultFaceGrid = {\n    1: [12],\n    2: [11, 13],\n    3: [6, 12, 18],\n    4: [6, 8, 16, 18],\n    5: [6, 8, 12, 16, 18],\n    6: [6, 8, 11, 13, 16, 18]\n};\n\nexport const faceClasses = [\n    '_3dface _3dface--one',\n    '_3dface _3dface--two',\n    '_3dface _3dface--three',\n    '_3dface _3dface--four',\n    '_3dface _3dface--five',\n    '_3dface _3dface--six'\n];\n\nexport const times = (counter: number, callback: (index: number) => ReactChild) => {\n    const data = [];\n    for(let i = 0; i < counter; i++) {\n        data.push(callback(i));\n    }\n\n    return data;\n}","import * as React from 'react';\nimport './styles.scss';\nimport { TProps, TSingleFace, TValue } from './_types';\nimport { defaultFaceGrid, faceClasses, faceTransformMap, times, valueClassMap } from './_utils';\n\nconst { useState, useEffect } = React;\n\nconst getFaceArray = (size: number, faces: string[], faceBg?: string): TSingleFace[] => {\n    return faceClasses.map((className: string, index: number) => ({\n        className,\n        children: !faces[index] ? (\n            <div className={`defaultFace ${valueClassMap[(index + 1) as TValue]}`}>\n                {times(25, (idx) => (\n                    <div key={idx}>\n                        {defaultFaceGrid[(index + 1) as TValue].includes(idx) && <span />}\n                    </div>\n                ))}\n            </div>\n        ) : null,\n        style: {\n            ...faceTransformMap[(index + 1) as TValue](size / 2),\n            width: size + 'px',\n            height: size + 'px',\n            ...(faceBg && { backgroundColor: faceBg }),\n            ...(faces[index] && { backgroundImage: `url(${faces[index]})` }),\n        },\n    }));\n};\n\nexport default function Dice(props: TProps) {\n    const { rollingTime = 1000, onRoll, defaultValue = 6, size = 250, faceBg, faces = [], disabled, cheatValue, placement, sound, triggers = ['click'], ...rest } = props;\n    const [value, setValue] = useState<TValue>(defaultValue);\n    const [rolling, setRolling] = useState(false);\n    const [faceArray, setFaceArray] = useState<TSingleFace[]>([]);\n    const [placementStyles, setPlacementStyles] = useState<React.CSSProperties>({});\n    const [buttonStyles, setButtonStyles] = useState<React.CSSProperties>({});\n\n    const handleDiceRoll = () => {\n        let diceAudio: HTMLAudioElement;\n        if (sound) {\n            diceAudio = new Audio(sound);\n            diceAudio.play();\n        }\n        setRolling(true);\n        setTimeout(() => {\n            let rollValue = Math.floor((Math.random() * 6) + 1) as TValue;\n            if (cheatValue) rollValue = cheatValue;\n            \n            setRolling(false);\n            setValue(rollValue);\n            \n            if (diceAudio) diceAudio.pause();\n            if (!onRoll) return;\n            onRoll(rollValue);\n        }, rollingTime);\n    };\n\n    const keyPressHandler = (event: KeyboardEvent) => {\n        if (!triggers?.length || !triggers.includes(event.key)) {\n            return;\n        }\n\n        handleDiceRoll();\n    };\n\n    const clickHandler = () => {\n        if (!triggers?.length || !triggers.includes('click')) {\n            return;\n        }\n\n        handleDiceRoll();\n    };\n\n    useEffect(() => {\n        if (typeof window === 'undefined' || !triggers?.length) {\n            return;\n        }\n        window.addEventListener('keypress', keyPressHandler);\n        // Remove event listeners on cleanup\n        return () => {\n          window.removeEventListener('keypress', keyPressHandler);\n        };\n    }, [triggers]);\n    \n    useEffect(() => {\n        setFaceArray(getFaceArray(size, faces, faceBg));\n    }, [size, faces.length, faceBg]);\n\n    useEffect(() => {\n        const positionStyles = placement?.split('-')?.reduce((acc, curr) => {\n            return { ...acc, [curr]: ['left', 'right'].includes(curr) ? 0 : `-${size}px` };\n        }, {}) as React.CSSProperties;\n        setPlacementStyles(positionStyles);\n    }, [placement, size]);\n\n    useEffect(() => {\n        setButtonStyles({\n            ...rest,\n            ...placementStyles,\n            width: size + 'px',\n            height: size + 'px',\n            filter: disabled ? 'grayscale(100%)' : 'unset' \n        });\n    }, [placementStyles, size, disabled]);\n\n    if (!faceArray?.length) return null;\n\n    return (\n        <button disabled={disabled || rolling} onClick={clickHandler} style={buttonStyles} className={`_space3d ${valueClassMap[value]} ${rolling && 'rolling'}`}>\n            <div className=\"_3dbox\">\n                <div {...faceArray[0]} />\n                <div {...faceArray[1]} />\n                <div {...faceArray[2]} />\n                <div {...faceArray[3]} />\n                <div {...faceArray[4]} />\n                <div {...faceArray[5]} />\n            </div>\n        </button>\n    )\n}"],"names":["valueClassMap","1","2","3","4","5","6","faceTransformMap","translate","transform","left","marginLeft","defaultFaceGrid","faceClasses","times","counter","callback","data","i","push","useState","React.useState","useEffect","React.useEffect","props","_a","rollingTime","onRoll","_b","defaultValue","_c","size","faceBg","_d","faces","disabled","cheatValue","placement","sound","_e","triggers","rest","_f","value","setValue","_g","rolling","setRolling","_h","faceArray","setFaceArray","_j","placementStyles","setPlacementStyles","_k","buttonStyles","setButtonStyles","handleDiceRoll","diceAudio","Audio","play","setTimeout","rollValue","Math","floor","random","pause","keyPressHandler","event","length","includes","key","window","addEventListener","removeEventListener","map","className","index","children","React.createElement","idx","style","width","height","backgroundColor","backgroundImage","getFaceArray","positionStyles","split","reduce","acc","curr","filter","onClick"],"mappings":"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"}